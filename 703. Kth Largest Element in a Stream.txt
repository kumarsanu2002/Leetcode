class KthLargest {
public:
        priority_queue<int, vector<int>, greater<int>> pq;
             int s;
    KthLargest(int k, vector<int>& nums) {
        s=k;
        for(auto x: nums ){
             pq.push(x);
            if(pq.size()>k) pq.pop();  
        }
    }
    
    int add(int val) {
        pq.push(val);
          if(pq.size()>s) pq.pop();  
            return pq.top(); //top will kth largest 
    }

};

/**
 * Your KthLargest object will be instantiated and called as such:
 * KthLargest* obj = new KthLargest(k, nums);
 * int param_1 = obj->add(val);
 */

//because in priority queue top element will be kth lagest element 
        //1.push all element 
        // 2. if size of pq == k and x>=pq.top       --pq.push(k)
         //3. but if pq.size > k   ---pop
 //same condition for add function