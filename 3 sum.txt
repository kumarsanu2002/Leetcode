class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
          if(nums.size() < 3) return {}; //because there must be 3  integer
        vector<vector<int>> ret;   //store ans
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-1;++i){
            if(i>0 && nums[i] == nums[i-1]) continue;
            int tar = 0 - nums[i];  //because a+b+c=0 => b+c=0-a and here a=nums[i]
            int hi=nums.size()-1,lo=i+1; //lo=i+1 becaue target is i
            while(hi>lo){
                int summ = nums[hi]+nums[lo]; //two pointer approach
                if(summ > tar)
                    hi--;
                else if(summ < tar)
                    lo++;
                else{
                    ret.push_back({nums[i],nums[lo],nums[hi]}); //{} is to push int into vector of vector
                    lo++,hi--;
                    while(hi>lo && nums[hi]==nums[hi+1]) hi--;
                    while(hi>lo && nums[lo]==nums[lo-1]) lo++;
                }    
            }
        }
        return ret;
    }
};
// i != k  and i != k and j != k